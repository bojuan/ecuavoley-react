{"version":3,"sources":["context/MyGlobalContext.tsx","components/InputName.tsx","utils/errors.ts","assets/EcuavoleyLogo.svg","components/Logo.tsx","sections/InitSection.tsx","components/Score.tsx","components/LimitGameTime.tsx","sections/GameSection.tsx","components/EndTime.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INIT_DATA_GAME_TIME","limitScore","logs","winner","INIT_DATA_ACTUAL_GAME","teamChange","sideTeamChange","scoreTeamOne","scoreTeamTwo","MyGlobalContext","createContext","section","setSection","s","nameTeamOne","setNameTeamOne","nameTeamTwo","setNameTeamTwo","firstGameTime","setFirstGameTime","secondGameTime","setSecondGameTime","thirdGameTime","setThirdGameTime","actualGameTime","setActualGameTime","useGlobalContext","useContext","InputName","setNameTeam","title","value","className","onChange","e","target","myErrors","TEAM_ONE_IS_EMPTY","TEAM_TWO_IS_EMPTY","EQUALS_NAMES","Logo","alt","src","Ecuavoleylogo","InitSection","useState","errors","setErrors","useEffect","name","prevstate","filter","err","type","disabled","length","onClick","prevState","map","index","Score","nameTeam","isTeamOne","isMyChange","actualScore","handleChangeScore","isDown","copy","LimitGameTime","limit","time","setLimit","toUpperCase","GameSection","dataGameTime","sideArrow","style","display","undefined","EndTime","isEndTime","isTeamOneWinner","isThereThirdTime","textButton","newGame","resetdata","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a00a1833.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\r\n\r\nexport type TypeSections = \"init\" | \"game\";\r\n\r\nexport interface GameTime {\r\n  limitScore: number;\r\n  winner: string | null;\r\n  logs: string[];\r\n}\r\n\r\nexport const INIT_DATA_GAME_TIME: GameTime = {\r\n  limitScore: 12,\r\n  logs: [],\r\n  winner: null,\r\n};\r\n\r\nexport interface ActualGameTime {\r\n  teamChange: string;\r\n  sideTeamChange: 'left' | 'right';\r\n  scoreTeamOne: number;\r\n  scoreTeamTwo: number;\r\n}\r\n\r\nexport const INIT_DATA_ACTUAL_GAME: ActualGameTime = {\r\n    teamChange: '',\r\n    sideTeamChange: 'left',\r\n    scoreTeamOne: 0,\r\n    scoreTeamTwo: 0\r\n  }\r\n\r\nexport interface GlobalContent {\r\n  section: TypeSections;\r\n  setSection: React.Dispatch<React.SetStateAction<TypeSections>>;\r\n  nameTeamOne: string;\r\n  setNameTeamOne: React.Dispatch<React.SetStateAction<string>>;\r\n  nameTeamTwo: string;\r\n  setNameTeamTwo: React.Dispatch<React.SetStateAction<string>>;\r\n  firstGameTime: GameTime;\r\n  setFirstGameTime: React.Dispatch<React.SetStateAction<GameTime>>;\r\n  secondGameTime: GameTime;\r\n  setSecondGameTime: React.Dispatch<React.SetStateAction<GameTime>>;\r\n  thirdGameTime: GameTime;\r\n  setThirdGameTime: React.Dispatch<React.SetStateAction<GameTime>>;\r\n  actualGameTime: ActualGameTime;\r\n  setActualGameTime: React.Dispatch<React.SetStateAction<ActualGameTime>>;\r\n}\r\n\r\nexport const MyGlobalContext = createContext<GlobalContent>({\r\n  section: \"init\", // set a default value\r\n  setSection: (s) => {},\r\n  nameTeamOne: \"\",\r\n  setNameTeamOne: (s) => {},\r\n  nameTeamTwo: \"\",\r\n  setNameTeamTwo: (s) => {},\r\n  firstGameTime: INIT_DATA_GAME_TIME,\r\n  setFirstGameTime: (s) => {},\r\n  secondGameTime: INIT_DATA_GAME_TIME,\r\n  setSecondGameTime: (s) => {},\r\n  thirdGameTime: INIT_DATA_GAME_TIME,\r\n  setThirdGameTime: (s) => {},\r\n  actualGameTime: INIT_DATA_ACTUAL_GAME,\r\n  setActualGameTime: (s) => {},\r\n});\r\n\r\nexport const useGlobalContext = () => useContext(MyGlobalContext);\r\n","import { FunctionComponent } from \"react\";\r\n\r\nconst InputName: FunctionComponent<{\r\n  setNameTeam: (name: string) => void;\r\n  title: string;\r\n  value: string;\r\n}> = ({ setNameTeam, title, value }) => {\r\n  return (\r\n    <div className=\"inputName\">\r\n      <div className=\"inputName__header\">{title}</div>\r\n      <div className=\"inputName__container\">\r\n        <input\r\n          className=\"inputName__input\"\r\n          value={value}\r\n          onChange={(e) => {\r\n            setNameTeam(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputName;\r\n","\r\nconst myErrors = {\r\n  TEAM_ONE_IS_EMPTY: \"Team one name is empty\",\r\n  TEAM_TWO_IS_EMPTY: \"Team two name is empty\",\r\n  EQUALS_NAMES: \"The names are the same\",\r\n};\r\n\r\nexport default myErrors;\r\n","export default __webpack_public_path__ + \"static/media/EcuavoleyLogo.19ae62e3.svg\";","import Ecuavoleylogo from \"../assets/EcuavoleyLogo.svg\";\r\nimport { useGlobalContext } from \"../context/MyGlobalContext\";\r\n\r\nconst Logo = () => {\r\n    const {\r\n        \r\n        section\r\n      } = useGlobalContext();\r\n  return (\r\n    <div className={`logo ${section === 'game' ? 'logo--game':''}`}>\r\n      <img alt=\"ecuavoley\" src={Ecuavoleylogo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useGlobalContext } from \"../context/MyGlobalContext\";\r\nimport InputName from \"../components/InputName\";\r\n\r\nimport myErrors from \"../utils/errors\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nconst InitSection: FunctionComponent = () => {\r\n  const {\r\n    section,\r\n    setSection,\r\n    nameTeamOne,\r\n    nameTeamTwo,\r\n    setActualGameTime,\r\n    setNameTeamOne,\r\n    setNameTeamTwo,\r\n  } = useGlobalContext();\r\n\r\n  const [errors, setErrors] = useState<string[]>([\r\n    myErrors.TEAM_TWO_IS_EMPTY,\r\n    myErrors.TEAM_ONE_IS_EMPTY,\r\n    myErrors.EQUALS_NAMES,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (section === \"init\") {\r\n      setErrors([\r\n        myErrors.TEAM_TWO_IS_EMPTY,\r\n        myErrors.TEAM_ONE_IS_EMPTY,\r\n        myErrors.EQUALS_NAMES,\r\n      ]);\r\n      setNameTeamOne(\"\");\r\n      setNameTeamTwo(\"\");\r\n    }\r\n  }, [section, setNameTeamOne, setNameTeamTwo]);\r\n\r\n  const handleSetNameOne = (name: string) => {\r\n    if (name === \"\") {\r\n      setErrors((prevstate) => [...prevstate, myErrors.TEAM_ONE_IS_EMPTY]);\r\n    } else {\r\n      setErrors((prevstate) =>\r\n        prevstate.filter((err) => err !== myErrors.TEAM_ONE_IS_EMPTY)\r\n      );\r\n    }\r\n    if (name === nameTeamTwo) {\r\n      setErrors((prevstate) => [...prevstate, myErrors.EQUALS_NAMES]);\r\n    } else {\r\n      setErrors((prevstate) =>\r\n        prevstate.filter((err) => err !== myErrors.EQUALS_NAMES)\r\n      );\r\n    }\r\n    setNameTeamOne(name);\r\n  };\r\n\r\n  const handleSetNameTwo = (name: string) => {\r\n    if (name === \"\") {\r\n      setErrors((prevstate) => [...prevstate, myErrors.TEAM_TWO_IS_EMPTY]);\r\n    } else {\r\n      setErrors((prevstate) =>\r\n        prevstate.filter((err) => err !== myErrors.TEAM_TWO_IS_EMPTY)\r\n      );\r\n    }\r\n    if (name === nameTeamOne) {\r\n      setErrors((prevstate) => [...prevstate, myErrors.EQUALS_NAMES]);\r\n    } else {\r\n      setErrors((prevstate) =>\r\n        prevstate.filter((err) => err !== myErrors.EQUALS_NAMES)\r\n      );\r\n    }\r\n    setNameTeamTwo(name);\r\n  };\r\n\r\n  const handleGoToPlay = () => {\r\n    setSection(\"game\");\r\n    setActualGameTime((prevState) => ({\r\n      ...prevState,\r\n      teamChange: nameTeamOne,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`InitSection__container InitSection__container--one ${\r\n          section !== \"init\" ? \"animation-one\" : \"animation-one-reverse\"\r\n        }`}\r\n      >\r\n        <InputName\r\n          setNameTeam={handleSetNameOne}\r\n          title=\"TEAM ONE\"\r\n          value={nameTeamOne}\r\n        />\r\n      </div>\r\n      <div\r\n        className={`InitSection__container InitSection__container--two ${\r\n          section !== \"init\" ? \"animation-two\" : \"animation-two-reverse\"\r\n        }`}\r\n      >\r\n        <InputName\r\n          setNameTeam={handleSetNameTwo}\r\n          title=\"TEAM TWO\"\r\n          value={nameTeamTwo}\r\n        />\r\n      </div>\r\n      <Logo />\r\n      <button\r\n        type=\"button\"\r\n        disabled={errors.length > 0}\r\n        className={`InitSection__button ${\r\n          section !== \"init\" ? \"animation-button-ok\" : \"\"\r\n        } `}\r\n        onClick={handleGoToPlay}\r\n      >\r\n        GO\r\n      </button>\r\n      {errors.length > 0 && (\r\n        <div className=\"InitSection__errors-container\">\r\n          {errors.map((err, index) => (\r\n            <div className=\"error\" key={index}>\r\n              <img\r\n                className=\"error__warning\"\r\n                alt=\"warning\"\r\n                src=\"https://www.flaticon.com/svg/vstatic/svg/1680/1680012.svg?token=exp=1619912935~hmac=c524d2991bd0610b6a21f7f3a6c6580c\"\r\n              />\r\n              <span className=\"error__text\">{err}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InitSection;\r\n","import { FunctionComponent } from \"react\";\r\nimport { useGlobalContext } from \"../context/MyGlobalContext\";\r\n\r\nconst Score: FunctionComponent<{\r\n  nameTeam: string;\r\n  limitScore: number;\r\n}> = ({ nameTeam, limitScore }) => {\r\n  \r\n  const {\r\n    nameTeamOne,\r\n    actualGameTime,\r\n    setActualGameTime,\r\n    firstGameTime,\r\n    secondGameTime,\r\n    thirdGameTime,\r\n  } = useGlobalContext();\r\n\r\n  const isTeamOne = nameTeam === nameTeamOne;\r\n\r\n  const isMyChange = nameTeam === actualGameTime.teamChange;\r\n\r\n  const actualScore = isTeamOne\r\n    ? actualGameTime.scoreTeamOne\r\n    : actualGameTime.scoreTeamTwo;\r\n\r\n  const handleChangeScore = (isDown?: boolean) => {\r\n    setActualGameTime((prevState) => {\r\n      const copy = { ...prevState };\r\n      if (isTeamOne) {\r\n        copy.scoreTeamOne = isDown\r\n          ? prevState.scoreTeamOne - 1\r\n          : prevState.scoreTeamOne + 1;\r\n      } else {\r\n        copy.scoreTeamTwo = isDown\r\n          ? prevState.scoreTeamTwo - 1\r\n          : prevState.scoreTeamTwo + 1;\r\n      }\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"score\">\r\n      <button\r\n        disabled={!isMyChange || actualScore === limitScore}\r\n        className=\"score__button\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          handleChangeScore();\r\n        }}\r\n      >\r\n        Up\r\n      </button>\r\n      <div className=\"score__container\">\r\n        <span className=\"score__head\">{nameTeam}</span>\r\n        <span className=\"score__numbers\">{actualScore}</span>\r\n      </div>\r\n\r\n      <button\r\n        disabled={!isMyChange || actualScore === 0}\r\n        className=\"score__button\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          handleChangeScore(true);\r\n        }}\r\n      >\r\n        Down\r\n      </button>\r\n\r\n      <div className=\"score__check\">\r\n        <div\r\n          className={`score__checkContainer ${\r\n            !firstGameTime.winner\r\n              ? \"\"\r\n              : firstGameTime.winner === nameTeam\r\n              ? \"score__checkContainer--win\"\r\n              : \"score__checkContainer--lose\"\r\n          }`}\r\n        />\r\n        <div\r\n          className={`score__checkContainer ${\r\n            !secondGameTime.winner\r\n              ? \"\"\r\n              : secondGameTime.winner === nameTeam\r\n              ? \"score__checkContainer--win\"\r\n              : \"score__checkContainer--lose\"\r\n          }`}\r\n        />\r\n        <div\r\n          className={`score__checkContainer ${\r\n            !thirdGameTime.winner\r\n              ? \"\"\r\n              : thirdGameTime.winner === nameTeam\r\n              ? \"score__checkContainer--win\"\r\n              : \"score__checkContainer--lose\"\r\n          }`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import { FunctionComponent } from \"react\";\r\n\r\nconst LimitGameTime: FunctionComponent<{\r\n  limit: number;\r\n  setLimit: () => void;\r\n  time: \"first\" | \"second\" | \"third\";\r\n}> = ({ limit, setLimit, time }) => {\r\n    \r\n  return (\r\n    <div className=\"limit\">\r\n      <div>\r\n        <b>{time.toUpperCase()} TIME</b>\r\n      </div>\r\n      <div className=\"limit__container\" >{limit}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LimitGameTime;\r\n","import { useGlobalContext } from \"../context/MyGlobalContext\";\r\nimport Score from \"../components/Score\";\r\nimport LimitGameTime from \"../components/LimitGameTime\";\r\nimport { ActualGameTime } from \"../interfaces/interfaces\";\r\n\r\nconst GameSection = () => {\r\n  const {\r\n    nameTeamOne,\r\n    setNameTeamOne,\r\n    nameTeamTwo,\r\n    setNameTeamTwo,\r\n    actualGameTime,\r\n    setActualGameTime,\r\n    firstGameTime,\r\n    secondGameTime,\r\n    thirdGameTime,\r\n    section,\r\n  } = useGlobalContext();\r\n\r\n  const dataGameTime: ActualGameTime = {\r\n    time: !firstGameTime.winner\r\n      ? \"first\"\r\n      : !secondGameTime.winner\r\n      ? \"second\"\r\n      : \"third\",\r\n    limitScore: !firstGameTime.winner\r\n      ? firstGameTime.limitScore\r\n      : !secondGameTime.winner\r\n      ? secondGameTime.limitScore\r\n      : thirdGameTime.limitScore,\r\n  };\r\n\r\n  const handleChange = () => {\r\n    setActualGameTime((prevState) => ({\r\n      ...prevState,\r\n      sideTeamChange: prevState.sideTeamChange === \"left\" ? \"right\" : \"left\",\r\n      teamChange:\r\n        prevState.teamChange === nameTeamOne ? nameTeamTwo : nameTeamOne,\r\n    }));\r\n  };\r\n\r\n  const handleChangeSide = () => {\r\n    setActualGameTime((prevState) => ({\r\n      ...prevState,\r\n      scoreTeamOne: prevState.scoreTeamTwo,\r\n      scoreTeamTwo: prevState.scoreTeamOne,\r\n      sideTeamChange: prevState.sideTeamChange === \"left\" ? \"right\" : \"left\",\r\n    }));\r\n\r\n    setNameTeamOne(nameTeamTwo);\r\n    setNameTeamTwo(nameTeamOne);\r\n  };\r\n\r\n  const sideArrow = `gameSection__arrow--${actualGameTime.sideTeamChange}`;\r\n\r\n  return (\r\n    <div\r\n      className=\"gameSection\"\r\n      style={{ display: section === \"init\" ? \"none\" : undefined }}\r\n    >\r\n      <div className=\"gameSection__container\">\r\n        <Score nameTeam={nameTeamOne} limitScore={dataGameTime.limitScore} />\r\n      </div>\r\n      <div className=\"gameSection__container\">\r\n        <Score nameTeam={nameTeamTwo} limitScore={dataGameTime.limitScore} />\r\n      </div>\r\n      <LimitGameTime\r\n        limit={dataGameTime.limitScore}\r\n        setLimit={() => {}}\r\n        time={dataGameTime.time}\r\n      />\r\n      <div className=\"gameSection__change\">\r\n        <div className=\"gameSection__changeContainer\">\r\n          <div className={`gameSection__arrow ${sideArrow}`}>\r\n            <img src=\"/arrow.svg\" alt=\"arrow\" />\r\n          </div>\r\n\r\n          <button type=\"button\" onClick={handleChange}/>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"button\" className=\"changeSide\" onClick={handleChangeSide}>\r\n       <img alt=\"change\" src=\"https://www.flaticon.com/svg/vstatic/svg/152/152360.svg?token=exp=1619915958~hmac=1e8dc71b92a0c123d4a1032aa26dd551\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSection;\r\n","import { GameTime, useGlobalContext } from \"../context/MyGlobalContext\";\r\nimport { ActualGameTime } from \"../interfaces/interfaces\";\r\nconst EndTime = () => {\r\n  const {\r\n    nameTeamOne,\r\n    setNameTeamOne,\r\n    nameTeamTwo,\r\n    setNameTeamTwo,\r\n    actualGameTime,\r\n    setActualGameTime,\r\n    firstGameTime,\r\n    setFirstGameTime,\r\n    secondGameTime,\r\n    setSecondGameTime,\r\n    thirdGameTime,\r\n    setThirdGameTime,\r\n    setSection,\r\n  } = useGlobalContext();\r\n\r\n  const dataGameTime: ActualGameTime = {\r\n    time:\r\n      !firstGameTime.winner && !secondGameTime.winner\r\n        ? \"first\"\r\n        : !secondGameTime.winner || !firstGameTime.winner\r\n        ? \"second\"\r\n        : \"third\",\r\n    limitScore: !firstGameTime.winner\r\n      ? firstGameTime.limitScore\r\n      : !secondGameTime.winner\r\n      ? secondGameTime.limitScore\r\n      : thirdGameTime.limitScore,\r\n  };\r\n\r\n  const isEndTime =\r\n    actualGameTime.scoreTeamOne === dataGameTime.limitScore ||\r\n    actualGameTime.scoreTeamTwo === dataGameTime.limitScore;\r\n\r\n  const isTeamOneWinner =\r\n    isEndTime && actualGameTime.scoreTeamOne === dataGameTime.limitScore;\r\n\r\n  const isThereThirdTime =\r\n    (dataGameTime.time === \"second\" &&\r\n      firstGameTime.winner === nameTeamOne &&\r\n      !isTeamOneWinner) ||\r\n    (firstGameTime.winner === nameTeamTwo && isTeamOneWinner);\r\n\r\n  const textButton =\r\n    dataGameTime.time === \"third\"\r\n      ? \"GO NEW GAME\"\r\n      : dataGameTime.time === \"first\"\r\n      ? \"GO TO SECOND TIME\"\r\n      : isThereThirdTime\r\n      ? \"GO TO THIRD TIME\"\r\n      : \"GO NEW GAME\";\r\n\r\n  const newGame = () => {\r\n    const resetdata: GameTime = {\r\n      limitScore: 12,\r\n      logs: [],\r\n      winner: null,\r\n    };\r\n   \r\n    setFirstGameTime(resetdata);\r\n    setSecondGameTime(resetdata);\r\n    setThirdGameTime(resetdata);\r\n    setSection(\"init\");\r\n    \r\n  };\r\n\r\n  const handleGo = () => {\r\n    if (dataGameTime.time === \"first\") {\r\n      setFirstGameTime((prevState) => ({\r\n        ...prevState,\r\n        winner: isTeamOneWinner ? nameTeamOne : nameTeamTwo,\r\n      }));\r\n    } else if (dataGameTime.time === \"second\") {\r\n      setSecondGameTime((prevState) => ({\r\n        ...prevState,\r\n        winner: isTeamOneWinner ? nameTeamOne : nameTeamTwo,\r\n      }));\r\n      if (!isThereThirdTime) newGame();\r\n    } else if (dataGameTime.time === \"third\") {\r\n      setThirdGameTime((prevState) => ({\r\n        ...prevState,\r\n        winner: isTeamOneWinner ? nameTeamOne : nameTeamTwo,\r\n      }));\r\n      newGame();\r\n    }\r\n\r\n    setActualGameTime({\r\n      scoreTeamOne: 0,\r\n      scoreTeamTwo: 0,\r\n      sideTeamChange:\r\n        actualGameTime.sideTeamChange,\r\n      teamChange: isTeamOneWinner ? nameTeamTwo : nameTeamOne,\r\n    });\r\n    setNameTeamOne(nameTeamTwo);\r\n    setNameTeamTwo(nameTeamOne);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`EndTime ${\r\n        isEndTime ? \"EndTime--visible\" : \"EndTime--noVisible\"\r\n      }`}\r\n    >\r\n      <div className=\"EndTime__container\">\r\n        <div className=\"EndTime__text\">\r\n          <span>Winner</span>\r\n          <b>{isTeamOneWinner ? nameTeamOne : nameTeamTwo}</b>\r\n        </div>\r\n\r\n        <button className=\"EndTime__button\" type=\"button\" onClick={handleGo}>\r\n          {textButton}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndTime;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  MyGlobalContext,\r\n  TypeSections,\r\n  GameTime,\r\n  INIT_DATA_GAME_TIME,\r\n  ActualGameTime,\r\n  INIT_DATA_ACTUAL_GAME,\r\n} from \"./context/MyGlobalContext\";\r\nimport InitSection from \"./sections/InitSection\";\r\nimport GameSection from \"./sections/GameSection\";\r\nimport EndTime from \"./components/EndTime\";\r\n\r\nfunction App() {\r\n  const [section, setSection] = useState<TypeSections>(\"init\");\r\n\r\n  const [nameTeamOne, setNameTeamOne] = useState<string>(\"\");\r\n  const [nameTeamTwo, setNameTeamTwo] = useState<string>(\"\");\r\n\r\n  const [firstGameTime, setFirstGameTime] = useState<GameTime>(\r\n    INIT_DATA_GAME_TIME\r\n  );\r\n  const [secondGameTime, setSecondGameTime] = useState<GameTime>(\r\n    INIT_DATA_GAME_TIME\r\n  );\r\n  const [thirdGameTime, setThirdGameTime] = useState<GameTime>(\r\n    INIT_DATA_GAME_TIME\r\n  );\r\n\r\n  const [actualGameTime, setActualGameTime] = useState<ActualGameTime>(\r\n    INIT_DATA_ACTUAL_GAME\r\n  );\r\n\r\n  return (\r\n    <MyGlobalContext.Provider\r\n      value={{\r\n        section,\r\n        setSection,\r\n        nameTeamOne,\r\n        setNameTeamOne,\r\n        nameTeamTwo,\r\n        setNameTeamTwo,\r\n        firstGameTime,\r\n        setFirstGameTime,\r\n        secondGameTime,\r\n        setSecondGameTime,\r\n        thirdGameTime,\r\n        setThirdGameTime,\r\n        actualGameTime,\r\n        setActualGameTime,\r\n      }}\r\n    >\r\n      <InitSection />\r\n      <GameSection />\r\n      <EndTime />\r\n    </MyGlobalContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}